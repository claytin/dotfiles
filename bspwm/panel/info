#!/usr/bin/env perl

use v5.22;

sub clrds {
     return "%{F$_[1]}$_[0]%{F-}";
}

sub wms {
     chomp(my $wmss = `bspc control --get-status`);
     my ($mon, @wms) = split /:/, $wmss;

     my $dsks = "";
     foreach my $dis (@wms) {
          given ($dis) {
               when (/^o/) {
                    $dsks .= " " . &clrds((substr $dis, 1), "#ff839496");
               }
               when (/^[OF]/) {
                    $dsks .= " " . &clrds((substr $dis, 1), "#fffafcfb");
               }
               default { continue }
          }
     }

     return $dsks;
}

sub thrm {
     chomp(my $acpit = `acpi -t | awk '{ printf("%d\\n", \$4)}'`);
     my @thrm = split /\n/, $acpit;

     my $ft = 0;
     for (my $i = 0; $i < @thrm; $i++) {
          $ft = $thrm[$i] if ($thrm[$i] > $ft);
     }

     return sprintf("%s", &clrds("$ft °C ", "#fffafcfb")); # \u00b0
}

sub proc { # to slow can't be used
     chomp(my $mpso = `mpstat 1 1 -P ON |\
          awk '/Média/ && \$2 ~ /[0-3]/ { printf("%d\\n", 100 - \$12) }'`);
     my @cpu = split /\n/, $mpso;

     my $cpu_str = "";
     for (my $i = 0; $i < @cpu; $i++) {
          $cpu_str .= "%{F#ff839496}#$i%{F-} $cpu[$i]\% ";
     }

     return $cpu_str;
}

sub umem {
     chomp(my $umem = `free -m | awk '/Mem/ { print \$3 }'`); # used memory

     return sprintf("%s", "${umem}MB ");
}

sub date {
     chomp(my $date = `date +"%a %d %b %H:%M"`);

     return &clrds($date, "#fffafcfb");
}

while (1) {
     say "%{l}", &wms, "%{c}", &date, "%{r}", &thrm, &proc, &umem;
}
