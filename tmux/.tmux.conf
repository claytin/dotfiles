# change default prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix

set-option -g allow-rename off

# format status "bar"
set-option -g status-position bottom
set-option -g status-justify  centre

set -g pane-border-style bg=colour0
set -ga pane-border-style fg=colour20

set -g pane-active-border-style fg=colour2

set -g status-style bg=colour0,fg=colour20

set -g message-style bg=colour0,fg=colour3
set -g message-command-style bg=colour0,fg=colour20

set -g window-status-current-format "#[bg=colour18,fg=colour2]» #W «"
set -g window-status-format         "#[bg=colour18,fg=colour20] #W "

set -g status-left  ""
set -g status-right "#[bg=colour18,fg=colour2]ß #S"

# non loggin shell
set -g default-command "$SHELL"
set -g default-shell   "$SHELL"

# fix colors
set -g default-terminal "screen-256color"

# reduce scape time
set -sg escape-time 1

# start windows and panels indexing at 1
set -g base-index      1
set -g pane-base-index 1

# easy reload of conf file
bind r source-file ~/.tmux.conf \; display-message "» conf reloaded «"

# rename window
bind @ command-prompt "rename-window '%%'"

## moving through windows
# last active window
bind b last-window

# back/forth
unbind n # unbind p is done later on vi copy/paste mode
bind , select-window -t :-
bind . select-window -t :+

# split windows like vim
unbind '"'
unbind %
bind s split-window -v
bind v split-window -h

# move around panes like vim
unbind Up
unbind Down
unbind Left
unbind Right
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# fix some kind of problem with window size
set -g aggressive-resize on

# resize panes like vim
bind < resize-pane -L 5
bind - resize-pane -D 5
bind + resize-pane -U 5
bind > resize-pane -R 5

# rebind layout selection; conflict with wm key-bindings
unbind M-1
unbind M-2
unbind M-3
unbind M-4
unbind M-5
bind C-1 select-layout even-horizontal
bind C-2 select-layout even-vertical
bind C-3 select-layout main-horizontal
bind C-4 select-layout main-vertical
bind C-5 select-layout tiled

# bind ; to command-prompt, like my vim
unbind :
bind \; command-prompt

## Vi style controls for copy mode
# set vi mode
setw -g mode-keys vi

# vi like copy mode
unbind p
unbind ]
bind p paste-buffer
bind -Tcopy-mode-vi 'v' send -X begin-selection
bind -Tcopy-mode-vi 'y' send -X copy-selection

## Integration with X clipboard. Copies in and out of tmux, i.e.
## tmux -> X (with 'bind C-c'), and X -> tmux (with 'bind C-v')
# copies from tmux buffer out to an X clipboard "provider" (xclip for instance)
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
# copies from an X clipboard "provider" into the tmux buffer. This probably
# overwrites tmux current buffer content, if any
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

## unbind some stuff
unbind Space   # next layout
unbind "'"     # index "select-window -t ..."
unbind D       # select-client (stange)
unbind L       # switch client -l
unbind M       # select pane -M
unbind PPage   # copy-mode -u
unbind M-n     # next-window -a
unbind M-p     # previous-window -a
unbind M-o     # rotate-window -D
unbind M-Up    # resize-pane -U 5
unbind M-Down  # resize-pane -D 5
unbind M-Left  # resize-pane -L 5
unbind M-Right # resize-pane -R 5
unbind C-Up    # resize-pane -U
unbind C-Down  # resize-pane -D
unbind C-Left  # resize-pane -L
unbind C-Right # resize-pane -R
